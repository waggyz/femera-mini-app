#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{textcomp}
\usepackage[space=true]{accsupp}
\newcommand{\copyablespace}{\BeginAccSupp{method=hex,unicode,ActualText=00A0}\hphantom{x}\EndAccSupp{}}
\end_preamble
\use_default_options true
\begin_modules
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package auto
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "upquote=true,columns=fullflexible,basicstyle={\ttfamily},literate={{*}{{\char42}}1 {-}{{\char45}}1 {\ }{{\copyablespace}}1}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
DRAFT
\begin_inset Newline newline
\end_inset

Femera 0.3 user and developer guide
\end_layout

\begin_layout Author
David Wagner
\end_layout

\begin_layout Abstract
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
 tempor incididunt ut labore et dolore magna aliqua.
 Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi
 ut aliquip ex ea commodo consequat.
 Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore
 eu fugiat nulla pariatur.
 Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia
 deserunt mollit anim id est laborum.
\end_layout

\begin_layout Abstract
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Abstract
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Femera is intended to be built and used in a high-performance parallel computing
 environment.
 This guide is organized for different readers.
\end_layout

\begin_layout Verse

\series bold
System administrators
\series default
: build and install Femera (part
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "part:Building-Femera"

\end_inset

) for use by production and power users.
\end_layout

\begin_layout Verse

\series bold
Production users
\series default
: run Femera from the command line (part
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "part:Using-Femera"

\end_inset

, section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Running-Femera"

\end_inset

) or use it within Python (part
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "part:Using-Femera"

\end_inset

, section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Femera-Python-use"

\end_inset

).
 
\end_layout

\begin_layout Verse

\series bold
Power users
\series default
: develop Femera plugins and compile them in a compatible build environment
 (part
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "part:Developing-Femera-plugins"

\end_inset

).
\end_layout

\begin_layout Verse

\series bold
Femera developers
\series default
: maintain, debug, extend, and customize Femera (part
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "part:Femera-theory"

\end_inset

).
 
\end_layout

\begin_layout Standard
If Femera has already been built for your computing environment, production
 users may skip ahead to section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Running-Femera"

\end_inset

 for details about running Femera from the command line, or section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Femera-Python-use"

\end_inset

 to use Femera in Python.
 
\end_layout

\begin_layout Part
Build Femera
\begin_inset CommandInset label
LatexCommand label
name "part:Building-Femera"

\end_inset


\end_layout

\begin_layout Standard
Femera is 
\shape italic
not
\shape default
 distributed with a ready-to-use binary executable as it is a high-performance
 computing mini-app that relies on features of the specific hardware it
 is used on.
 Femera is only available for Linux and requires a build environment compatible
 with the intended run-time environment.
 
\end_layout

\begin_layout Section
Linux system requirements
\begin_inset CommandInset label
LatexCommand label
name "sec:Linux-system-requirements"

\end_inset


\end_layout

\begin_layout Standard
Femera can be built and run in most modern Linux environments with a minimal
 Femera configuration and one of the compiler toolchains listed in table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:mini-app-build-tools"

\end_inset

.
 The compiler toolchain must support C++11 and should support Open Multi-process
ing
\begin_inset space ~
\end_inset

(OpenMP).
 In addition, the software listed in table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:mini-app-build-tools"

\end_inset

 should be available, on the build system and in the run-time environment,
 to build and run the recommended Femera configuration.
 
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/pre-build/sys_has_min.py require linux:3 bash:4 git:1.8 make:3 python:2
 c++:11 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/pre-build/sys_has_min.py require_any_of g++:4.8 icc:14 clang++:3.1
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/pre-build/sys_has_min.py recommend mpi:3.0 numad:20150602 cmake:3.12
 mkl:0 xwindows:0 omp:201107
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/pre-build/sys_has_min.py optional valgrind:3 dot:2 gnuplot:4
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="21" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="right" valignment="middle" width="1in">
<column alignment="left" valignment="middle" width="0.75in">
<column alignment="left" valignment="middle" width="4.25in">
<row>
<cell alignment="right" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Software
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Minimum 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Minimal Femera configuration
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Git
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Download Femera and dependency source code.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bash
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.2.57(1)
\begin_inset Note Note
status open

\begin_layout Plain Layout
FIXME was 4
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Build, install, test, tune, and use Femera.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GNU Make
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Build, install, test, and tune Femera.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Python
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 2 or 3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test and tune Femera.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Compiler toolchain 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
g++
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.8
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Only one of these toolchains is needed to compile and link Femera and its
 dependencies.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
icc
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
clang++ 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.1
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Recommended Femera configuration
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OpenMP
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
201107
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Run Femera using shared-memory parallelism.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MPI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
FIXME WAS 1.10
\end_layout

\end_inset

Run Femera on a cluster using the Message Passing Interface
\begin_inset space ~
\end_inset

(MPI).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
libnuma
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20150602
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Check for non-uniform memory access
\begin_inset space ~
\end_inset

(NUMA) domains.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CMake
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.12*
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Build and install dependencies.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Intel MKL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
**
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The Math Kernel Library
\begin_inset space ~
\end_inset

(MKL) accelerates some math routines.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
See appendix
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Femera-visualization"

\end_inset

 to use an X Window System
\begin_inset space ~
\end_inset

(X) for visualization.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Advanced Femera developer and build tools
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LaTeX
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
FIXME
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generate this guide.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dot 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The dot application is part of graphviz.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
valgrind
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Check for memory leaks.
 See section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Valgrind"

\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vector Advisor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
**
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vector Advisor requires icc to measure performance.
 See section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Intel-Vector-Advisor"

\end_inset

.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\size footnotesize
*CMake version
\begin_inset space ~
\end_inset

3.12 is required by HDF5, version
\begin_inset space ~
\end_inset

3.1 by Gmsh, and version
\begin_inset space ~
\end_inset

2.8.x for other libraries recommended in section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:External-libraries"

\end_inset

.
\end_layout

\begin_layout Plain Layout

\size footnotesize
**Use versions of MKL and Vector Advisor compatible with the version of
 icc used.
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
FIXME gnuplot 4 May not be needed if using Python for plots
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Femera mini-app system software needed
\begin_inset CommandInset label
LatexCommand label
name "tab:mini-app-build-tools"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO make footnotes in table work.
\begin_inset Foot
status open

\begin_layout Plain Layout
CMake version 3.12 is required by HDF5, version 3.1 by gmsh, and version 2.8.x
 for other libraries recommended in section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:External-libraries"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:external/get-cinclude2dot.test.bats
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Power users and Femera developers should also make the advance tools listed
 in table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:mini-app-build-tools"

\end_inset

 available on the build system.
 Configure and build Femera after verifying system requirements.
\end_layout

\begin_layout Section
Femera quick start
\begin_inset CommandInset label
LatexCommand label
name "sec:Quick-start"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "quick-start.tex"

\end_inset


\end_layout

\begin_layout Standard
The remaining sections in this part provide additional Femera configuration
 details for power users and system administrators.
 Production users may proceed to part
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "part:Using-Femera"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand nameref
reference "part:Using-Femera"

\end_inset

.
\end_layout

\begin_layout Section
Advanced Femera configuration
\begin_inset CommandInset label
LatexCommand label
name "sec:Configuring-Femera"

\end_inset


\end_layout

\begin_layout Standard
Femera may be configured for a variety of uses.
\end_layout

\begin_layout Section
External libraries supported by Femera
\begin_inset CommandInset label
LatexCommand label
name "sec:External-libraries"

\end_inset


\end_layout

\begin_layout Standard
This guide assumes the recommended Femera configuration built with C++11,
 OpenMP, MPI, libnuma, CGNS with HDF5, Gmsh with OpenCascade and FLTK, Bats,
 GoogleTest, and pybind11.
 Support for C++11 and OpenMP should be provided by the compiler toolchain.
 (See section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Linux-system-requirements"

\end_inset

.) The source code repositories listed in table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:external-submodules"

\end_inset

 are cloned as Git submodules to the (
\family typewriter
external/
\family default
) directory when making the target (
\family typewriter
external
\family default
) in listings
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lis:quick-start-user"

\end_inset

 or
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lis:quick-start-sys"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/dwagner5/Documents/My_Code/femera-mini-demo/build/external/external.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
External dependencies
\begin_inset CommandInset label
LatexCommand label
name "fig:External-dependencies"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="4">
<features booktabs="true" tabularvalignment="middle">
<column alignment="right" valignment="middle" width="1in">
<column alignment="left" valignment="middle" width="0.75in">
<column alignment="center" valignment="middle" width="1in">
<column alignment="left" valignment="middle" width="3in">
<row>
<cell alignment="right" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Submodule
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Required by
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Required for
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bats
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Testing executable files and Bash shell scripts
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GoogleTest
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Testing C/C++ code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pybind11
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.5.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Python binding
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CGNS
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parallel file handling (5.0 for cubic elements)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HDF5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CGNS
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parallel file handling
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gmsh
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.7.1*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAD, meshing, file handling, and visualization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FLTK
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gmsh
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Visualization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FreeType
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FLTK
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Visualization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="top" usebox="none" width="6.25in">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
*If the compiler is g++
\begin_inset space ~
\end_inset

4.8, the build scripts will roll Gmsh back to Gmsh
\begin_inset space ~
\end_inset

4.7.1 and apply a custom patch.
 See (
\family typewriter
external/gmsh471-gcc48-patch
\family default
.sh).
 A more recent release of Gmsh
\begin_inset space ~
\end_inset

4 should be used with a modern compiler.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
External Git submodules
\begin_inset CommandInset label
LatexCommand label
name "tab:external-submodules"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/pre-build/sys_has_minimum.py recommend cgns:5.0 hdf5:1 gmsh:4.7.1
 googletest:1.10 pybind11:2
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/pre-build/gmsh_is_current_or_gmsh471_is_patched_for_gcc48.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:external/sys-has-minimum.test.sh bats 1.5
\end_layout

\begin_layout Plain Layout
tdd:external/sys-has-minimum.test.sh googletest 1.10
\end_layout

\begin_layout Plain Layout
tdd:external/sys-has-minimum.test.sh pybind11 2.5
\end_layout

\begin_layout Plain Layout
tdd:external/sys-has-minimum.test.sh CGNS 5
\end_layout

\begin_layout Plain Layout
tdd:external/sys-has-minimum.test.sh hdf5 1.12
\end_layout

\begin_layout Plain Layout
tdd:external/sys-has-minimum.test.sh gmsh 4.7
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:external/sys-has-minimum.test.sh occt 7
\end_layout

\begin_layout Plain Layout
tdd:external/sys-has-minimum.test.sh fltk 1
\end_layout

\begin_layout Plain Layout
tdd:external/sys-has-minimum.test.sh freetype 2
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Commands to clone or update all available submodules are provided in listing
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Update-git-submodules"

\end_inset

 for reference.
 If needed, the additional dependency source code in table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:external-libs-downloaded"

\end_inset

 is also downloaded, extracted (into 
\family typewriter
external/
\family default
), built, and installed before building Femera.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=bash,float=ht"
inline false
status open

\begin_layout Plain Layout

# Clone Femera and all submodules.
\end_layout

\begin_layout Plain Layout

git clone --recurse-submodules https://github.com/waggyz/femera-mini-app.git
 # 30-60  mn
\end_layout

\begin_layout Plain Layout

#
\end_layout

\begin_layout Plain Layout

# Or, update submodules (if already cloned without --recurse-submodules)
\end_layout

\begin_layout Plain Layout

# from within the femera-mini-app/ repository directory.
\end_layout

\begin_layout Plain Layout

git submodule update --init --recursive
\end_layout

\begin_layout Plain Layout

#
\end_layout

\begin_layout Plain Layout

# To update an individual submodule (e.g., Gmsh).
\end_layout

\begin_layout Plain Layout

cd external/gmsh; git checkout; cd ../
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Commands to update Git submodules
\begin_inset CommandInset label
LatexCommand label
name "lis:Update-git-submodules"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features booktabs="true" tabularvalignment="middle">
<column alignment="right" valignment="middle" width="1in">
<column alignment="left" valignment="middle" width="0.75in">
<column alignment="center" valignment="middle" width="1in">
<column alignment="left" valignment="middle" width="3in">
<row>
<cell alignment="right" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Library
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Version 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Required by
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Required for
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Boost
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.56
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pybind11
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Python binding
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OpenCascade
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gmsh
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Advanced CAD (e.g., constructive solid geometry)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
External library dependencies
\begin_inset CommandInset label
LatexCommand label
name "tab:external-libs-downloaded"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features booktabs="true" tabularvalignment="middle">
<column alignment="right" valignment="middle" width="1in">
<column alignment="left" valignment="middle" width="0.75in">
<column alignment="center" valignment="middle" width="1in">
<column alignment="left" valignment="middle" width="3in">
<row>
<cell alignment="right" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Python module
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Version 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Required by
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Required for
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pytest
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pybind11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Python binding
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
docwriter
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FreeType
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generating documentation
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Python modules
\begin_inset CommandInset label
LatexCommand label
name "tab:python-modules"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/sys_has_minimum.py recommend fltk:1 freetype:2 occt:7
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:external/get-opencascade.test.bats
\end_layout

\begin_layout Plain Layout
tdd:external/get-fltk.test.bats
\end_layout

\begin_layout Plain Layout
tdd:external/get-freetype.test.bats
\end_layout

\end_inset


\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:external/install-opencascade.test.bats
\end_layout

\begin_layout Plain Layout
tdd:external/install-fltk.test.bats
\end_layout

\begin_layout Plain Layout
tdd:external/install-freetype.test.bats
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:external/tools/get-cinclude2dot.test.bats
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A suite of integration tests is available to verify that Femera runs correctly
 as configured.
\end_layout

\begin_layout Section
Femera integration tests
\begin_inset CommandInset label
LatexCommand label
name "sec:Integration-tests"

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsection
Check for memory leaks
\begin_inset CommandInset label
LatexCommand label
name "subsec:Valgrind"

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
Femera performance tuning
\begin_inset CommandInset label
LatexCommand label
name "sec:Tuning-performance"

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Verse

\series bold
Best practice
\series default
: Tune Femera on the same hardware it is intended to run on.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/make_tune_did_check_fmrmodel.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsection
Use Intel Advisor 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Intel-Vector-Advisor"

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Part
Use Femera 
\begin_inset CommandInset label
LatexCommand label
name "part:Using-Femera"

\end_inset


\end_layout

\begin_layout Standard
Femera is intended for research use by scientists and engineers having some
 familiarity with using MPI applications on a high-performance computing
 cluster.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/tests_examples_tutorials_are_installed.py
\end_layout

\end_inset

 
\end_layout

\begin_layout Section
Start Femera 
\begin_inset CommandInset label
LatexCommand label
name "sec:Running-Femera"

\end_inset


\end_layout

\begin_layout Standard
Femera is an MPI application intended to execute in a hybrid MPI+OpenMP
 parallel processing environment.
 The processing environment must be determined before launching the Femera
 executable with (
\family typewriter
mpiexec
\family default
).
 Installing Femera also installs an executable Bash shell script (from 
\family typewriter
tools/fmrexec.sh
\family default
) that wraps (
\family typewriter
mpiexec
\family default
) for convenience.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Although (fmrexec.sh) is not currently compiled into an executable, it could
 be compiled (using shc, https://github.com/neurobin/shc).
 Make installs (tools/fmrexec.sh) as (fmrexec), without the (.sh) extension.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO Use shc to compile examples/fmrexec.sh as build/examples/fmrexec.
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
fmrexec [RUN_MODE[:fmrmodel]] [-mpi:<MPIOPT>] [-[fmr:]<FMROPT>] [\SpecialChar ldots
]
\end_layout

\begin_layout Standard
This script sets up the parallel environment and starts Femera in one of
 a variety of different run modes based on the optional (
\family typewriter
RUN_MODE
\family default
) keyword.
 Femera run modes are listed in table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Femera-run-modes"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0.75in">
<column alignment="left" valignment="top" width="4.5in">
<column alignment="left" valignment="top" width="0.75in">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Run mode
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Command-line use
\series default

\begin_inset Note Note
status open

\begin_layout Plain Layout
FIXME run mode: local or host: Run Femera in the local host parallel processing
 environment.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Femera-command-line-use"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
check
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
FIXME or scan?
\end_layout

\end_inset

Check the options and input provided but do 
\shape italic
not
\shape default
 solve.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
auto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Run Femera with the parallel processing environment set up automatically
 based on model (input file) content.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Python use
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Femera-Python-use"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
python
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Run Femera Python scripts.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
interact
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Run Femera in Python interactively.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Advanced use
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
femera
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set up the parallel processing environment manually and run Femera.
 This is the default if 
\family typewriter
RUN_MODE
\family default
 is not specified.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
FIXME Should the default be this or auto?
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Femera-advanced-use"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
test
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Run Femera integration tests.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Integration-tests"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tune
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tune Femera for optimal performance.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tuning-performance"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Developer use
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
grind
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Check Femera for memory leaks.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Valgrind"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
advisor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Analyze Femera performance with Intel Advisor.*
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Intel-Vector-Advisor"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
*Intel Advisor requires a compatible Intel compiler (
\family typewriter
icc
\family default
) toolchain.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Femera-run-modes"

\end_inset

Femera run modes
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
\align center
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/fmrexec_does_set_run_modes.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
See section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Femera-advanced-use"

\end_inset

 to set up the parallel processing environment manually.
\end_layout

\begin_layout Verse

\series bold
Best practice
\series default
: Use the (
\family typewriter
fmrexec
\family default
) wrapper script to run Femera from the command line.
\end_layout

\begin_layout Standard
After tuning Femera for performance (section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tuning-performance"

\end_inset

), an efficient processing environment can be set up at run time by specifying
 the median simulation size (
\family typewriter
SIMSZ
\family default
 ∈ [XS|SM|MD|LG|XL]).
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/femera_cli_fmr_simsz_does_set_nmpi_nomp.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/femera_cli_fmr_simsz_does_warn_if_untuned.py
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
fmrexec [RUN_MODE[:fmrmodel]] -[fmr:]<SIMSZ> [\SpecialChar ldots
]
\end_layout

\begin_layout Standard
Femera supports plugins and several optional libraries that may also take
 command-line options.
 A unique option prefix is assigned to each library.
 The (
\family typewriter
fmr:
\family default
) command line option prefix for Femera may be omitted.
 
\end_layout

\begin_layout Verse

\series bold
Best practice
\series default
: Prefix Femera options (
\family typewriter
-fmr:
\family default
<option>) to avoid ambiguity.
\end_layout

\begin_layout Standard
Run Femera with the help (
\family typewriter
-fmr:h
\family default
) option to see a complete list of library and plugin command line prefixes
 available.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/femera_cli_fmr_prefix_is_optional.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/femera_cli_prefixed_options_are_passed_to_libs.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/femera_cli_help_does_list_option_prefixes.py
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
fmrexec -fmr:h
\end_layout

\begin_layout Standard
The default parallel processing environment is 2
\begin_inset space ~
\end_inset

MPI tasks, or 1
\begin_inset space ~
\end_inset

MPI task for each NUMA domain, whichever is larger.
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Standard
Femera comes with tutorials and examples of common use cases to help users
 get started.
 The tutorial and example simulations may be run from the command line (section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Running-Femera"

\end_inset

) or used within Python (section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Femera-Python-use"

\end_inset

).
 
\end_layout

\begin_layout Section
Get started with Femera on the command line 
\begin_inset CommandInset label
LatexCommand label
name "sec:Femera-command-line-use"

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Standard
Femera may also be run in Python.
\end_layout

\begin_layout Section
Get started with Femera in Python 
\begin_inset CommandInset label
LatexCommand label
name "sec:Femera-Python-use"

\end_inset


\end_layout

\begin_layout Standard
As with running the Femera executable, the parallel environment configuration
 should be specified when running a Femera Python script.
 
\end_layout

\begin_layout Verse

\series bold
Best practice
\series default
: Use the 
\family typewriter
fmrexec
\family default
 wrapper script described in section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Running-Femera"

\end_inset

 to start a Femera Python script (e.g.
 
\family typewriter
fmrscript.py
\family default
).
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/fmrexec_python_does_run_python.py
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
fmrexec python [fmrscript.py] [\SpecialChar ldots
]
\end_layout

\begin_layout LyX-Code
fmrexec interact [fmrscript.py] [\SpecialChar ldots
]
\end_layout

\begin_layout Standard
Both of these keywords (
\family typewriter
python
\family default
, 
\family typewriter
interact
\family default
) start Python in interactive mode if a Femera Python script file name is
 not provided.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/fmrexec_interact_does_start_python_interactive.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Part
Develop Femera plugins and extensions 
\begin_inset CommandInset label
LatexCommand label
name "part:Developing-Femera-plugins"

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Verse

\series bold
Best practice
\series default
: Put user plugins in (
\family typewriter
external/plugins/
\family default
).
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/pre-build/plugin_external_directory_does_exist.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/femera_does_scan_external_plugin_directory.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
Advanced Femera use 
\begin_inset CommandInset label
LatexCommand label
name "sec:Femera-advanced-use"

\end_inset


\end_layout

\begin_layout Standard
Femera is built specifically for each type of CPU.
 In shared filesystem environments, there should be a different Femera executabl
e file for each different CPU type.
 The Bash script (
\family typewriter
tools/fmrmodel.sh
\family default
) is installed as (
\family typewriter
fmrmodel
\family default
) and can be used in an alias to run the version appropriate to the current
 host.
\end_layout

\begin_layout Verse

\series bold
Best practice
\series default
: Alias the machine-specific Femera executable.
\begin_inset Newline newline
\end_inset


\family typewriter
alias femera="femera-`fmrmodel`"
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-install/sys_femera_is_alias.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/make-install-tools.test.bats
\end_layout

\begin_layout Plain Layout
tdd:tests/make-uninstall-tools.test.bats
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The script (
\family typewriter
fmrmodel
\family default
) can also be used to run the version of Femera that is appropriate for
 the current system, as shown below.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tools/fmrmodel.test.bats
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tools/fmrcores.test.bats
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tools/fmrnumas.test.bats
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/pre-build/tools_pragma_simd_is_supported.py
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
femera[
\family typewriter
-
\family default
`fmrmodel`] -fmr:h
\end_layout

\begin_layout Standard
The parallel environment configuration, including the number of MPI processes
 (
\family typewriter
NMPI
\family default
) and the number of OpenMP threads (
\family typewriter
NOMP
\family default
) for each MPI process can be specified when Femera is invoked.
 
\end_layout

\begin_layout LyX-Code
mpiexec -n <NMPI> --bind-to core -map-by node:pe=<NOMP> 
\backslash

\end_layout

\begin_layout LyX-Code
  femera[
\family typewriter
-
\family default
`fmrmodel`] -[fmr:]o <NOMP> [\SpecialChar ldots
]
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/femera_cli_opt_op_does_set_nomp.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout LyX-Code
mpiexec -n <NMPI> --bind-to core -map-by node:pe=<NOMP> 
\backslash

\end_layout

\begin_layout LyX-Code
  python [fmrscript.py] -[fmr:]o <NOMP> [\SpecialChar ldots
]
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
Femera capability life cycle
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Enumerate
User plugin
\begin_inset Newline newline
\end_inset

Plugins are detected and loaded at run-time.
\end_layout

\begin_layout Enumerate
External Femera extension
\begin_inset Newline newline
\end_inset

Extensions may be enabled when configuring Femera before building it.
 External dependencies may be downloaded and installed automatically by
 
\family typewriter
make 
\family default
external.
 Dependency source code may be available in the repository's (
\family typewriter
external/
\family default
) directory or automatically downloaded to (
\family typewriter
build/
\family default
).
 Some external dependencies may be satisfied if they are available on the
 build system or provided by the user.
 See section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "part:Building-Femera"

\end_inset

 for details.
\end_layout

\begin_layout Enumerate
Built-in Femera capability
\begin_inset Newline newline
\end_inset

Libraries needed must be available on the build system prior to building
 Femera to enable these capabilities.
 Examples of these include MPI, OpenMP, and libnuma.
\end_layout

\begin_layout Enumerate
Deprecation
\begin_inset Newline newline
\end_inset

From time to time a capability may be deprecated.
 This can happen, for example, if a specific capability can be replaced
 by a more general capability that performs as well.
 A capability identified for deprecation will usually still be available
 as an optional external extension or user plugin until the next major version
 release.
\end_layout

\begin_layout Enumerate
Removal from repository
\begin_inset Newline newline
\end_inset

Built-in capabilities identified for deprecation will be removed at the
 next major Femera version release after beta testing.
 Though it will not be maintained by Femera developers, it may still be
 possible to obtain and use the capability as a user plugin.
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Part
Femera theory of operation
\begin_inset CommandInset label
LatexCommand label
name "part:Femera-theory"

\end_inset


\end_layout

\begin_layout Standard
Femera is not a replacement for traditional finite element applications.
 Femera provides capabilities that can not be done efficiently, if at all,
 by commercial applications.
 These include the ability to solve very large high-fidelity models, or
 run a large number of smaller simulations.
\end_layout

\begin_layout Itemize
Very large, very high-fidelity models
\end_layout

\begin_layout Itemize
Very many models
\end_layout

\begin_layout Itemize
Finite element development sandbox
\end_layout

\begin_layout Standard
plcaeholder
\end_layout

\begin_layout Section
Femera software architecture
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsection
Repository directory structure
\end_layout

\begin_layout Standard
The Femera repository is maintained as an open-source mini-app on GitHub
 [https://github.com/waggyz/femera-mini-app] for public use, and is also
 available at [FIXME] for internal NASA use and continuous testing.
\end_layout

\begin_layout Subsection
Test-driven development
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Verse

\series bold
Best practice
\series default
: Follow Femera test-driven development steps.
\begin_inset Newline newline
\end_inset

1.
 Describe a capability in this guide.
\begin_inset Newline newline
\end_inset

2.
 Add a LaTeX comment starting with (
\family typewriter
tdd
\begin_inset Phantom HPhantom
status open

\begin_layout Plain Layout

\end_layout

\end_inset

:
\family default
) and followed by the name of a test file and any arguments needed to verify
 that the capability has been implemented correctly.
\begin_inset Newline newline
\end_inset

3.
 Write the test.
\begin_inset Newline newline
\end_inset

4.
 Check that the test fails with a useful debugging message.
\begin_inset Newline newline
\end_inset

5.
 Implement and debug the capability until the test passes.
\end_layout

\begin_layout Standard
Femera test-driven development
\begin_inset space ~
\end_inset

(TDD) is started by documenting the desired software behavior in this guide
 and including a LaTeX comment specifying a file that tests this capability
 immediately after describing the capability.
\end_layout

\begin_layout Verse

\series bold
Best practice
\series default
: Test names contain a form of 
\begin_inset Quotes eld
\end_inset

to be
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

to do
\begin_inset Quotes erd
\end_inset

, or 
\begin_inset Quotes eld
\end_inset

to have
\begin_inset Quotes erd
\end_inset

, (e.g.
 
\begin_inset Quotes eld
\end_inset

is
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

are
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

do
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

does
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

did
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

has
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

have
\begin_inset Quotes erd
\end_inset

) representing a Boolean (true/false) of the desired behavior.
 Avoid negative test names (containing, e.g., 
\begin_inset Quotes eld
\end_inset

does not
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

is not
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Standard
Test naming conventions and syntax are consistent with the best practices
 for the type of code being tested.
 
\end_layout

\begin_layout Itemize
Test Bash shell scripts and the Femera executable with Bats [https://bats-core.re
adthedocs.io/].
\end_layout

\begin_layout Itemize
Test Python scripts with the standard (
\family typewriter
unittest
\family default
) module [https://docs.python.org/3/library/unittest.html].
\end_layout

\begin_layout Itemize
Test C/C++ code with GoogleTest [https://google.github.io/googletest/].
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsubsection
Test Bash scripts and Femera command-line use 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Test-Bash-CLI"

\end_inset


\end_layout

\begin_layout Standard
During each (
\family typewriter
make
\begin_inset space ~
\end_inset

tdd
\family default
) or (
\family typewriter
make
\begin_inset space ~
\end_inset

test
\family default
) build, a Bash script (
\family typewriter
tools/scan-tdd.
\family default
sh) scans the user guide LaTeX source code (
\family typewriter
src/docs/*.tex)
\family default
 for tests to run.
 This script has its own TDD tests in a Bats script (tdd:
\family typewriter
tools/scan-tdd.test.
\family default
bats) using the side-by-side (sibling) Pitchfork unit test naming convention.
 The latter is run automatically during the build process, so only integration
 tests of (
\family typewriter
tools/scan-tdd.
\family default
sh) should be specified in a LaTeX comment, such as the test in listing
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Document-tdd-in-user-guide"

\end_inset

, an example of a LaTeX comment used for test-driven development.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=TeX,float=ht"
inline false
status open

\begin_layout Plain Layout


\backslash
begin{comment}
\end_layout

\begin_layout Plain Layout

tdd:tests/pre-build/content-has-tdd-lines.bats src/docs/*.lyx src/docs/*.tex
\end_layout

\begin_layout Plain Layout


\backslash
end{comment}
\begin_inset Caption Standard

\begin_layout Plain Layout
Document test-driven development tests as LaTeX comments in the source code
 of this guide.
\begin_inset CommandInset label
LatexCommand label
name "lis:Document-tdd-in-user-guide"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/pre-build/test_names_have_good_verbs.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/make_did_run_user_guide_tdd_tests.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsubsection
Test Python code
\begin_inset CommandInset label
LatexCommand label
name "subsec:Test-Python"

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsubsection
Test C/C++ code
\begin_inset CommandInset label
LatexCommand label
name "subsec:Test-C-code"

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
The finite element method
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsection
Sparse matrix-vector response evaluation
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsection
Element-by-element matrix-vector response evaluation 
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsection
Element-by-element tensor train response evaluation
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Part
\start_of_appendix
Appendices
\begin_inset CommandInset label
LatexCommand label
name "part:Appendices"

\end_inset


\end_layout

\begin_layout Section
Femera command line interface
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
Femera public Python interface
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
Femera public C++ interface
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
Femera internal C++ interface
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/build/make_did_update_inheritance_tree.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../build/docs/figs/src-inherit.eps
	lyxscale 50
	width 6in

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Femera internal API inheritance
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/make_did_update_include_tree.py
\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../build/docs/figs/src-notest.eps
	lyxscale 50
	width 6in

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Femera included source code files
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
Femera configurations known to work
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/make_did_update_working_config_list.py
\end_layout

\end_inset


\end_layout

\begin_layout Section
Femera performance
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
Femera visualization
\begin_inset CommandInset label
LatexCommand label
name "sec:Femera-visualization"

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Section
Femera development history
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsection
Femera mini-apps
\end_layout

\begin_layout Standard
placeholder
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default Make target
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Executable
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Purpose
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
phys
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
femera-phys
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Optimize solver and physics performance
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
femera-data
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Optimize data handling
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mini
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
femera-mini
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Optimize simulation throughput
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Femera mini-app versions
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
tdd:tests/post-build/make_target_exe_is_correct.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Subsection
Femera contributors
\end_layout

\begin_layout Standard
placeholder
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Femera license
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../../NOSA-1-3.txt"
lstparams "breaklines=true,alsoletter={()[]\\.,=},breakatwhitespace=false,breakindent=0pt"

\end_inset


\end_layout

\end_body
\end_document
